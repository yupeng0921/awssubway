{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description" : "create elb and auto scaling",

    "Parameters" : {
        "KeyName" : {
            "Type" : "String",
            "Description" : "key pair for web server"
        },
        "ImageId" : {
            "Type" : "String",
            "Description" : "image for auto scaling configuration"
        },
        "InstanceType" : {
            "Type" : "String",
            "Default" : "t1.micro",
            "Description" : "instance type for auto scaling configuration"
        },
        "DynamoDb" : {
            "Type" : "String",
            "Description" : "name of the dynamodb, need it to create arn for role"
        },
        "MinSize" : {
            "Type" : "String",
            "Default" : "2",
            "Description" : "min instance number of auto scaling group"
        },
		"MaxSize" : {
            "Type" : "String",
            "Default" : "8",
            "Description" : "max instance number of auto scaling group"
        }
    },

    "Mappings" : {
        "Region2AZ" : {
            "us-west-1" : { "AZ1" : "us-west-1b", "AZ2" : "us-west-1c" },
            "us-west-2" : { "AZ1" : "us-west-2a", "AZ2" : "us-west-2b" }
        }
    },

    "Resources" : {
        "LoadBalancer" : {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "30",
                    "Target": "HTTP:80/test.html",
                    "Timeout": "5",
                    "UnhealthyThreshold": "2"
                },
                "Listeners": [
                    {
                        "InstancePort": "80",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP",
                        "InstanceProtocol": "HTTP"
                    }
                ]
            }
        },

        "ElbSGIngress1" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupName" : { "Fn::GetAtt" : [ "LoadBalancer", "SourceSecurityGroup.GroupName" ] },
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp": "0.0.0.0/0"
            }
        },

        "ElbSGIngress2" : {
            "Type" : "AWS::EC2::SecurityGroupIngress",
            "Properties" : {
                "GroupName" : { "Fn::GetAtt" : [ "LoadBalancer", "SourceSecurityGroup.GroupName" ] },
                "IpProtocol" : "tcp",
                "FromPort" : "443",
                "ToPort" : "443",
				"CidrIp": "0.0.0.0/0"
            }
        },

        "InstanceSG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "sg for backend instance",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "WebServerRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Statement" : [ {
                        "Effect" : "Allow",
                        "Principal" : {
                            "Service" : [ "ec2.amazonaws.com" ]
                        },
                        "Action" : [ "sts:AssumeRole" ]
                    } ]
                },
                "Path" : "/",
                "Policies" : [ {
                    "PolicyName" : "WebServerPolicy",
                    "PolicyDocument" : {
                        "Statement" : [
                            {
                                "Effect" : "Allow",
                                "Action" : [ "dynamodb:PutItem", "dynamodb:query"],
                                "Resource" : { "Fn::Join" : [ "", [
                                    "arn:aws:dynamodb:",
                                    { "Ref" : "AWS::Region" },
                                    ":*:table/",
                                    { "Ref" : "DynamoDb" }
                                ] ] }
                            }
                        ]
                    }
                }]
            }
        },

        "WebServerProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [ {
                    "Ref" : "WebServerRole"
                } ]
            }
        },

        "LaunchConfiguration" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "KeyName" : { "Ref" : "KeyName" },
                "ImageId" : { "Ref" : "ImageId" },
                "SecurityGroups" : [ { "Ref" : "InstanceSG" } ],
                "InstanceType" : { "Ref" : "InstanceType"},
                "IamInstanceProfile" : { "Ref" : "WebServerProfile" }
            }
        },

        "AutoScalingGroup" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "LaunchConfigurationName" : { "Ref" : "LaunchConfiguration"},
                "MinSize" : { "Ref" : "MinSize" },
                "MaxSize" : { "Ref" : "MaxSize" },
                "LoadBalancerNames" : [ { "Ref" : "LoadBalancer" } ]
            }
        },

        "ScalingUpPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : {"Ref" : "AutoScalingGroup" },
                "Cooldown" : "300",
                "ScalingAdjustment" : "2"
            }
        },

        "ScalingDownPolicy" : {
            "Type" : "AWS::AutoScaling::ScalingPolicy",
            "Properties" : {
                "AdjustmentType" : "ChangeInCapacity",
                "AutoScalingGroupName" : { "Ref" : "AutoScalingGroup" },
                "Cooldown" : "300",
                "ScalingAdjustment" : "-2"
            }
        },

        "CPUAlarmHigh" : {
            "Type" : "AWS::CloudWatch::Alarm",
            "Properties" : {
                "AlarmDescription" : "Scaling up if CPU > 80% for 10 minutes",
                "MetricName" : "CPUUtilization",
                "Namespace" : "AWS/EC2",
                "Statistic" : "Average",
                "Period" : "300",
                "EvaluationPeriods" : "2",
                "Threshold" : "80",
                "AlarmActions" : [ { "Ref" : "ScalingUpPolicy" } ],
                "Dimensions" : [
                    {
                        "Name" : "AutoScalingGroupName",
                        "Value" : { "Ref" : "AutoScalingGroup" }
                    }
                ],
                "ComparisonOperator" : "GreaterThanThreshold"
            }
        },

        "CPUAlarmLow" : {
            "Type" : "AWS::CloudWatch::Alarm",
            "Properties" : {
                "AlarmDescription" : "Scaling down if CPU < 20% for 10 minutes",
                "MetricName" : "CPUUtilization",
                "Namespace" : "AWS/EC2",
                "Statistic" : "Average",
                "Period" : "300",
                "EvaluationPeriods" : "2",
                "Threshold" : "20",
                "AlarmActions" : [ { "Ref" : "ScalingDownPolicy" } ],
                "Dimensions" : [
                    {
                        "Name" : "AutoScalingGroupName",
                        "Value" : { "Ref" : "AutoScalingGroup" }
                    }
                ],
                "ComparisonOperator" : "LessThanThreshold"
            }
        }
    },

    "Outputs" : {
        "UrL" : {
            "Description" : "The URL of the website",
            "Value" : {
                "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "LoadBalancer", "DNSName" ] } ] ]
            }
        }
    }
}
